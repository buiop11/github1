<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="spring.mvc.myproject" />
	
	
	<!-- ★ Mybatis 설정 시작 -->

	<beans:bean name="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
	<beans:property name="jndiName" value="java:comp/env/jdbc/Oracle11g_pj" />
	
	<!-- DAOImpl에 이것과 동일 
	Context con = new InitialContext(); //server > context.xml 커넥션풀에 저장된 name를 검색해 오기위해서 사용 
	d_source = (DataSource)con.lookup("java:comp/env/jdbc/Oracle11g"); -->
	
	<beans:property name="resourceRef" value="true" />
	</beans:bean>
	
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
		<beans:property name="dataSource" ref="dataSource" /> 
		<beans:property name="mapperLocations" value="classpath:myproject/mapper/*.xml" />
		<!-- 위 경로가(classpath:) 틀리면 db 접근을 못함 -->
	</beans:bean>
	
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory" />
	</beans:bean>
	
	<!-- Mybatis 설정 종료 -->
	
	
	<!-- 파일업로드  MultipartResolver 설정 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="100000000"/>
		<beans:property name="maxInMemorySize" value="100000000" />
	</beans:bean>
	
	<!-- 메일 보내기  mail bean-->
	<beans:bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com"/>
		<beans:property name="port" value="587" />
		<beans:property name="username" value="mthsel@gmail.com" />
		<beans:property name="password" value="1kim234admin" />
		<beans:property name="javaMailProperties" >
			<beans:props>
				<beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	
	
</beans:beans>
